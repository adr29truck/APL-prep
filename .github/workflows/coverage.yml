name: TestCoverage

on:
  push:
  schedule:
  - cron: "0 0 * * *"

jobs:
  cc:
    runs-on: ubuntu-latest
    services: 
      postgres:
        image: postgres:13.1
        env:
          POSTGRES_DB: postgres
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: docker
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-interval 5s --health-retries 5

    steps:
    - uses: actions/checkout@v2
    - name: Checkout master
      run: git checkout master
    - uses: actions/setup-node@v1
      with:
        node-version: '12.x'
    - name: Install packages
      run: |
        cd frontend
        yarn install
    - name: Run unit tests
      run: |
        cd frontend
        yarn test --coverage --watchAll=false
    - uses: actions/setup-python@v2
    - name: Installing dependencies
      run: |
        cd backend
        pip install -r requirements.txt
    - name: Configuring database
      env:
        host: localhost
      run: |
        cd backend
        python seeder.py
    - name: Running tests
      env:
        host: localhost
      run: |
        cd backend
        coverage run -m pytest -s -vv 
        coverage json
        coverage xml
    - name: Download codeclimate test-reporter
      run: |
        echo Fetch testreporter tool
        curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
        chmod +x cc-test-reporter
    - name: Generate formatted coverage for codeclimate - Frontend
      run: |
        cd frontend
        ../cc-test-reporter format-coverage -t lcov -o ../coverage/frontend.json
    - name: Generate formatted coverage for codeclimate - Backend
      run: |
        cd backend
        ../cc-test-reporter format-coverage -t coverage.py  -o ../coverage/backend.json
    - name: Combine coverage for codeclimate
      run: |
        ls coverage
        ./cc-test-reporter sum-coverage -p 2 coverage/**.*.json
    - name: Upload coverage report to codeclimate
      env:
        CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
      run: |
        echo Upload report to codeclimate
        cd frontend
        ./cc-test-reporter upload-coverage